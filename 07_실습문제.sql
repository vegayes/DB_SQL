-- kh사용! 7 SUBQUERY 실습문제

-- 1)
SELECT EMP_ID , EMP_NAME , PHONE , TO_CHAR(HIRE_DATE, 'YY/MM/DD')  HIRE_DATE
FROM EMPLOYEE 
WHERE DEPT_CODE =(SELECT DEPT_CODE 
				FROM EMPLOYEE 
				WHERE EMP_NAME ='전지연')
AND EMP_NAME <> '전지연';


-- 2) 
SELECT EMP_ID 
FROM EMPLOYEE 
WHERE EXTRACT (YEAR FROM HIRE_DATE ) >= 2000;

SELECT EMP_ID , EMP_NAME , PHONE , SALARY , JOB_NAME
FROM EMPLOYEE 
NATURAL JOIN JOB
WHERE EMP_ID IN(SELECT EMP_ID
				FROM EMPLOYEE 
				WHERE EXTRACT (YEAR FROM HIRE_DATE ) >= 2000);

AND SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE );

(SELECT MAX(SALARY) 
FROM EMPLOYEE
WHERE EMP_ID IN(SELECT EMP_ID
				FROM EMPLOYEE 
				WHERE EXTRACT (YEAR FROM HIRE_DATE ) >= 2000));


SELECT EMP_ID , EMP_NAME , PHONE , SALARY , JOB_NAME
FROM EMPLOYEE 
NATURAL JOIN JOB
WHERE SALARY = (SELECT MAX(SALARY) 
				FROM EMPLOYEE
				WHERE EMP_ID IN(SELECT EMP_ID
								FROM EMPLOYEE 
								WHERE EXTRACT (YEAR FROM HIRE_DATE ) >= 2000));
SELECT MAX(SALARY) 
FROM EMPLOYEE 
WHERE EXTRACT (YEAR FROM HIRE_DATE) > = 2000;

SELECT EMP_ID , EMP_NAME , PHONE , SALARY , JOB_NAME
FROM EMPLOYEE 
NATURAL JOIN JOB 
WHERE SALARY = (SELECT MAX(SALARY) 
				FROM EMPLOYEE 
				WHERE EXTRACT (YEAR FROM HIRE_DATE) > = 2000);
							
							
-- 3) 
SELECT DEPT_CODE , JOB_CODE 
FROM EMPLOYEE 
WHERE EMP_NAME ='노옹철';

SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , DEPT_TITLE, JOB_NAME
FROM EMPLOYEE 
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE (DEPT_CODE , JOB_CODE) =(SELECT DEPT_CODE , JOB_CODE 
								FROM EMPLOYEE 
								WHERE EMP_NAME ='노옹철')
AND EMP_NAME != '노옹철';
							
							
-- 4) 
SELECT DEPT_CODE, JOB_CODE
FROM EMPLOYEE 
WHERE EXTRACT (YEAR FROM HIRE_DATE) = 2000;
				
SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , TO_CHAR(HIRE_DATE, 'YY/MM/DD') HIRE_DATE
FROM EMPLOYEE 
WHERE (DEPT_CODE, JOB_CODE) =(SELECT DEPT_CODE, JOB_CODE
								FROM EMPLOYEE 
								WHERE EXTRACT (YEAR FROM HIRE_DATE) = 2000);
							
	
-- 5)
SELECT DEPT_CODE , MANAGER_ID
FROM EMPLOYEE 
WHERE SUBSTR(EMP_NO, 1, 2) = 77 
AND SUBSTR(EMP_NO, 8,1) =2;
				
SELECT EMP_ID, EMP_NAME , DEPT_CODE , MANAGER_ID , EMP_NO ,TO_CHAR(HIRE_DATE, 'YY/MM/DD')  HIRE_DATE
FROM EMPLOYEE 
WHERE (DEPT_CODE , MANAGER_ID) = (SELECT DEPT_CODE , MANAGER_ID
									FROM EMPLOYEE 
									WHERE SUBSTR(EMP_NO, 1, 2) = 77 
									AND SUBSTR(EMP_NO, 8,1) =2);
							
							
-- 6) 

SELECT MIN(HIRE_DATE) 					
FROM EMPLOYEE 
WHERE ENT_YN ='N'
GROUP BY DEPT_CODE;

SELECT EMP_ID, EMP_NAME , NVL(DEPT_TITLE, '소속없음'), JOB_NAME, TO_CHAR(HIRE_DATE, 'YY/MM/DD') HIRE_DATE
FROM EMPLOYEE 
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE HIRE_DATE IN (SELECT MIN(HIRE_DATE) 					
						FROM EMPLOYEE 
						WHERE ENT_YN ='N'
						GROUP BY DEPT_CODE)
ORDER BY TO_DATE(HIRE_DATE);


-- 6) 상관 서브 쿼리이용  ==> 불가 (NULL이 되면 행 자체가 NULL이 됨. )
-- 부서별 입사일이 가장 빠른 사원의
-- 사번, 이름, 부서명(NULL이면 '소속없음'), 직급명, 입사일을 조회하고
-- 입사일이 빠른 순으로 조회하시오
-- 단, 퇴사한 직원은 제외하고 조회..

SELECT EMP_ID, EMP_NAME, DEPT_CODE, NVL(DEPT_TITLE, '소속없음'), JOB_NAME,  TO_CHAR(HIRE_DATE, 'YY/MM/DD') HIRE_DATE
FROM EMPLOYEE 
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
AND HIRE_DATE = (SELECT MIN(HIRE_DATE) 
				 FROM EMPLOYEE 
				 WHERE DEPT_CODE = NULL
				 AND ENT_YN = 'N' )
ORDER BY TO_DATE(HIRE_DATE);



SELECT MIN(HIRE_DATE)
FROM EMPLOYEE 
WHERE DEPT_CODE = NULL;






							
-- 7) 코드 너무 더러움. 다른 방법 찾아보기!
SELECT MIN(SUBSTR(EMP_NO, 1, 2))
FROM EMPLOYEE
ORDER BY JOB_CODE ;

SELECT JOB_CODE, DEPT_CODE
FROM EMPLOYEE
ORDER BY JOB_CODE ;						

SELECT JOB_CODE, 
MIN(EXTRACT(YEAR FROM SYSDATE) - (19|| SUBSTR(EMP_NO, 1,2) )) 나이
FROM EMPLOYEE 
GROUP BY JOB_CODE;
							
							
-- 1) 나이 먼저 나오게 하기
-- 2) 가장 어린 사람 뽑기
-- 3) 연봉 = (SALARY  + (SALARY * BONUS) ) * 12							
							
							
SELECT EMP_ID, EMP_NAME , JOB_NAME , 
(EXTRACT(YEAR FROM SYSDATE) - (19|| SUBSTR(EMP_NO, 1,2) )) 나이,
TO_CHAR(((SALARY + (SALARY * NVL(BONUS,'0')))*12 ), 'L999,999,999') "보너스 포함 연봉"
FROM EMPLOYEE 
NATURAL JOIN JOB
WHERE (JOB_CODE, EXTRACT(YEAR FROM SYSDATE) - (19|| SUBSTR(EMP_NO, 1,2) )) 
IN (SELECT JOB_CODE, 
		MIN(EXTRACT(YEAR FROM SYSDATE) - (19|| SUBSTR(EMP_NO, 1,2) )) 나이
		FROM EMPLOYEE 
		GROUP BY JOB_CODE)	
ORDER BY 4 DESC;




