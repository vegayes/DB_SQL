-- Basic SELECT --

-- #1)
SELECT DEPARTMENT_NAME 학과명 , CATEGORY 계열
FROM TB_DEPARTMENT ; 


-- #2)
SELECT  DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || ' 명 입니다.' AS "학원별 정원"
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = DEPARTMENT_NAME ;

--#3) X 학과 테이블 = '국어 국문학과' 학과번호를 받아와 
--      학생 테이블 = 학과번호와 일치한 값, 여학생, 휴학생을 만족한 값을 조회함.
SELECT STUDENT_NAME 
FROM  TB_STUDENT 
WHERE (SUBSTR(STUDENT_SSN,8,1)= 2 OR SUBSTR(STUDENT_SSN,8,1)=4) 
AND ABSENCE_YN = 'Y'
AND (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT 
	 WHERE DEPARTMENT_NAME = '국어국문학과') = DEPARTMENT_NO ;

--#4) 
SELECT STUDENT_NAME 
FROM TB_STUDENT 
WHERE STUDENT_NO  IN('A513079','A513090','A513091','A513110','A513119')
ORDER BY STUDENT_NAME DESC;


--#5)
SELECT DEPARTMENT_NAME , CATEGORY 
FROM TB_DEPARTMENT 
WHERE CAPACITY BETWEEN 20 AND 30;


--#6)
SELECT PROFESSOR_NAME 
FROM TB_PROFESSOR 
WHERE DEPARTMENT_NO IS NULL;

--#7) ?
SELECT STUDENT_NAME 
FROM TB_STUDENT 
WHERE DEPARTMENT_NO IS NULL;


-- *********출력갑싱 없을 때는 "출력값이 없습니다."라고 표현하고 싶음.
SELECT 
FROM TB_STUDENT 
WHERE DEPARTMENT_NO IS NULL;

--#8)
SELECT CLASS_NO 
FROM TB_CLASS 
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9)
SELECT DISTINCT CATEGORY 
FROM TB_DEPARTMENT 
ORDER BY CATEGORY ; 

--10) 
SELECT STUDENT_NO ,STUDENT_NAME , STUDENT_SSN 
FROM TB_STUDENT 
WHERE STUDENT_ADDRESS LIKE '전주시%' 
AND EXTRACT (YEAR FROM ENTRANCE_DATE ) = 2002
AND ABSENCE_YN ='N';


-------------------------------------------------------------------------------------
-- Additional SELECT 함수 --

-- #1) 
SELECT STUDENT_NO 학번 , STUDENT_NAME 이름, TO_CHAR(ENTRANCE_DATE,'RRRR-MM-DD') "입학년도"
FROM TB_STUDENT 
WHERE (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT 
		WHERE DEPARTMENT_NAME = '영어영문학과') = DEPARTMENT_NO
ORDER BY ENTRANCE_DATE ; 


-- #2) ?? 다르게 나오는거?? 뭐가?
SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR 
WHERE PROFESSOR_NAME NOT LIKE '___'; 


-- #3) 
SELECT  PROFESSOR_NAME 교수이름 , EXTRACT(YEAR FROM SYSDATE)-TO_NUMBER(19 || SUBSTR(PROFESSOR_SSN,1, 2)) AS "나이(만)"
FROM TB_PROFESSOR 
WHERE SUBSTR(PROFESSOR_SSN, 8,1) = 1
ORDER BY SUBSTR(PROFESSOR_SSN,1, 2) DESC;

/*
SELECT  TO_CHAR(SYSDATE, 'yyyy')  
FROM TB_PROFESSOR;

SELECT  EXTRACT(YEAR FROM SYSDATE) 
FROM TB_PROFESSOR;

SELECT 19 || SUBSTR(PROFESSOR_SSN,1,2) 
FROM TB_PROFESSOR;

SELECT  TO_CHAR( SUBSTR(STUDENT_SSN,1, 2),'YYYY')
FROM TB_STUDENT ;
*/

-- #4) 
SELECT SUBSTR( PROFESSOR_NAME, 2, 2) 이름 
FROM TB_PROFESSOR ;

-- #5) 
SELECT STUDENT_NO , STUDENT_NAME 
FROM TB_STUDENT 
WHERE (EXTRACT(YEAR FROM ENTRANCE_DATE) - TO_NUMBER(19 || SUBSTR(STUDENT_SSN,1, 2)))>19 ;

-- #6) 
SELECT TO_CHAR(TO_DATE(20201225),'DAY') "크리스마스는 무슨 요일?"
FROM DUAL;

--#7) 2099-10-11 , 1949-19-11 / 1999-10-11 , 2049-10-11
SELECT TO_DATE('99/10/11', 'YY/MM/DD') FROM DUAL;
SELECT TO_DATE('49/10/11', 'YY/MM/DD') FROM DUAL;
SELECT TO_DATE('99/10/11', 'RR/MM/DD') FROM DUAL;
SELECT TO_DATE('49/10/11', 'RR/MM/DD') FROM DUAL;

-- #8)
SELECT STUDENT_NO , STUDENT_NAME 
FROM TB_STUDENT 
WHERE STUDENT_NO NOT LIKE 'A%';

-- #9)
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO ='A517178'; 

-- #10)
SELECT DEPARTMENT_NO "학과번호" ,  count(*) "학생수(명)"
FROM TB_STUDENT  GROUP BY DEPARTMENT_NO 
ORDER BY DEPARTMENT_NO ;


-- #11)
SELECT COUNT(*)
FROM TB_STUDENT 
WHERE COACH_PROFESSOR_NO IS NULL;

-- #12)
SELECT SUBSTR(TERM_NO,1,4) 년도 ,ROUND(AVG(POINT),1) "년도 별 평점"
FROM TB_GRADE 
WHERE  STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4); 


-- #13) COUNT 값이 0이 되려면, 조건을 넣어 줘야함! 
SELECT DEPARTMENT_NO "학과코드명" ,COUNT(CASE WHEN ABSENCE_YN='Y' THEN 1 END) "휴학생 수"
FROM TB_STUDENT 
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO ;


-- #14)
SELECT STUDENT_NAME "동일이름", COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY STUDENT_NAME ; 

-- #15) 
SELECT SUBSTR(TERM_NO, 1, 4) 년도,  NVL(SUBSTR(TERM_NO, 5, 2),' ') "학기" , ROUND(AVG(POINT),1) "평점" 
FROM TB_GRADE 
WHERE  STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4) ,SUBSTR(TERM_NO, 5, 2))
ORDER BY SUBSTR(TERM_NO, 1, 4);

-----------------------------------------------------------------------------
-- Additional SELECT Option--

-- #1)
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME ;

-- #2)
SELECT STUDENT_NAME , STUDENT_SSN 
FROM TB_STUDENT 
WHERE ABSENCE_YN ='Y'
ORDER BY STUDENT_SSN  DESC;


-- #3)
SELECT STUDENT_NAME 학생이름 , STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT 
WHERE (STUDENT_ADDRESS LIKE '경기도%' OR STUDENT_ADDRESS LIKE '강원도%') 
AND STUDENT_NO NOT LIKE 'A%'
ORDER BY STUDENT_NAME  ;


-- #4)
SELECT PROFESSOR_NAME , PROFESSOR_SSN 
FROM TB_PROFESSOR 
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT 
WHERE DEPARTMENT_NAME = '법학과') 
ORDER BY PROFESSOR_SSN ;


-- #5) 소수점 안나타냄.
SELECT STUDENT_NO ,POINT 
FROM TB_GRADE 
WHERE TERM_NO ='200402' AND CLASS_NO ='C3118100'
ORDER BY POINT DESC , STUDENT_NO ;

/*SELECT FORMAT(POINT , "0.##")
FROM TB_GRADE 
WHERE TERM_NO ='200402' AND CLASS_NO ='C3118100'
ORDER BY POINT DESC , STUDENT_NO ;
*/

-- #6)join 사용  ***
SELECT STUDENT_NO , STUDENT_NAME , DEPARTMENT_NAME
FROM TB_STUDENT ts , TB_DEPARTMENT td
WHERE ts.DEPARTMENT_NO  = td.DEPARTMENT_NO ;

-- ANSI 기준 (컬럼명이 같은 경우)
SELECT STUDENT_NO , STUDENT_NAME , DEPARTMENT_NAME
FROM TB_STUDENT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);


-- #7) 
SELECT CLASS_NAME , DEPARTMENT_NAME
FROM TB_CLASS tc , TB_DEPARTMENT td
WHERE tc.DEPARTMENT_NO = td.DEPARTMENT_NO ;

-- ANSI 기준 (컬럼명이 같은 경우)
SELECT CLASS_NAME , DEPARTMENT_NAME
FROM TB_CLASS JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- #8)
-- 과목별 교수 이름을 찾으려고 한다. 과목이름과 교수 이름을 출력하는 SQL
SELECT CLASS_NAME , PROFESSOR_NAME
FROM TB_CLASS tc , TB_PROFESSOR tp, TB_CLASS_PROFESSOR tcp  
WHERE tcp.CLASS_NO =tc.CLASS_NO  AND tcp.PROFESSOR_NO = tp.PROFESSOR_NO 
ORDER BY PROFESSOR_NAME;

-- Class : Class_NO, DEPARTMENT_NO, CLASS_NAME
-- DEPARTMENT_NO : DEPARTMENT_NO, DEPARTMENT_NAME 
-- PROFESSOR : PROFESSOR_NO , PROFESSOR_NAME, DEPARTMENT_NO
-- CLASS_PROFESSOR : CLASS_NO, PROFESSOR_NO 있음.
SELECT c.CLASS_NAME , c.CLASS_NO
FROM TB_CLASS c
JOIN TB_PROFESSOR t ON(c.PROFESSOR_NO = t.PROFESSOR_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)  -- 왜 추가가 되는거지..?
ORDER BY DEPARTMENT_NO;

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
JOIN TB_CLASS USING(CLASS_NO)
ORDER BY DEPARTMENT_NO;

SELECT *
FROM TB_CLASS c
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
ORDER BY c.DEPARTMENT_NO;


SELECT CLASS_NAME , PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
ORDER BY C.DEPARTMENT_NO , CLASS_NAME, PROFESSOR_NAME;

-- #9)
SELECT CLASS_NAME , PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(C.DEPARTMENT_NO =D.DEPARTMENT_NO )
WHERE D.CATEGORY ='인문사회'
ORDER BY C.DEPARTMENT_NO , CLASS_NAME;



-- #10) -- STUDENT, GRADE (SUM , AVG), DEPARTMENT
-- Student : STUDENT_NO , DEPARTMENT_NO, STUDENT_NAME, COACH_PROFESSOR_NAME
-- GRADE : STUDENT_NO, CLASS_NO, POINT
SELECT STUDENT_NO 학번 , STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME ='음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME  -- 그룹 2개 묶기!!
ORDER BY STUDENT_NO;


-- #11) 
-- STUDENT : 학번, 학생이름, 학과 번호 
-- DEPARTMENT : 학과번호 , 학과 이름 
-- PROFESSOR : 교수이름

SELECT DEPARTMENT_NAME  학과이름 ,STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(PROFESSOR_NO = COACH_PROFESSOR_NO)
WHERE STUDENT_NO ='A313047';



-- #12)
--  STUDENT : STUDENT_NO, DEPARTMENT_NO, STUDENT_NAME, COACH_PROFESSOR
-- GRADE : TERM_NO, STUDENT_NO, CLASS_NO, POINT
-- CLASS : CLASS_NO, DEPARTMENT_NO, CLASS_NAME

SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT 
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) = 2007 
AND CLASS_NAME = '인간관계론'
GROUP BY STUDENT_NAME, TERM_NO
ORDER BY TERM_NO ;



-- #13) 
-- CLASS_NO : CLASS_NO, DEPARTMENT_NO, CLASS_NAME,  
-- DEPARTMENT : CATEGORY, DEPARTMENT_NO, CATEGORY
SELECT CLASS_NAME , DEPARTMENT_NAME 
FROM TB_CLASS -- 과목 
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO) -- 과목에 알맞게 교수 배정
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;


-- #14)?????????????????????????????????????????????
-- STUDNET : DEPARTMENT_NO, STUDENT_NAME, COAHCH_PROFESSOR
-- PROFESSOR : PROFESSOR_NO, PROFESSOR_NAME
SELECT STUDENT_NAME 학생이름 , NVL(PROFESSOR_NAME,'지도교수 미지정') 지도교수
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR ON(PROFESSOR_NO = COACH_PROFESSOR_NO)
WHERE DEPARTMENT_NAME ='서반아어학과'
ORDER BY EXTRACT (YEAR FROM ENTRANCE_DATE) ;


-- #15)
-- 학생 : 학번, 이름, 학과번호,
-- 학과 : 학과 이름, 학과번호
-- 성적 : 성적 ,학번
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME 학과이름, AVG(POINT) 평점
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE STUDENT_NAME IS NOT NULL 
AND ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING (AVG(POINT)>=4.0)
ORDER BY "학번";



--#16)
SELECT CLASS_NO ,CLASS_NAME, TRUNC(AVG(POINT),8) "AVG(POINT)"
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NAME ='환경조경학과'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO,CLASS_NAME
ORDER BY CLASS_NO;


-- #17)
SELECT f.STUDENT_NAME, NVL(f.STUDENT_ADDRESS,'입력되지 않았습니다.') STUDENT_ADDRESS
FROM TB_STUDENT s
JOIN TB_STUDENT f ON(s.DEPARTMENT_NO = f.DEPARTMENT_NO)
WHERE s.STUDENT_NAME = '최경희';


-- #18) XXXXXXXXXXXXXXXXXX
SELECT STUDENT_NO , STUDENT_NAME 
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT);

SELECT s.STUDENT_NO , s.STUDENT_NAME 
FROM TB_STUDENT s 
JOIN(
	SELECT STUDENT_NO no, MAX(AVG(POINT) rev
	FROM TB_STUDENT 
	GROUP BY STUDENT_NO 
	) b ON a.STUDENT_NO = b.STUDENT_NO 
	AND a.MAX(AVG(POINT)) = b.rev;
	JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT);



SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
		FROM TB_GRADE 
		JOIN TB_STUDENT USING(STUDENT_NO)
		WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
								FROM TB_DEPARTMENT
								WHERE DEPARTMENT_NAME = '국어국문학과')
		GROUP BY STUDENT_NO , STUDENT_NAME
		ORDER BY 평점 DESC)
WHERE ROWNUM = 1;




















-- #19)
SELECT d.DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT),1) 전공평점
FROM TB_DEPARTMENT d
JOIN TB_DEPARTMENT td ON(d.CATEGORY = td.CATEGORY )
JOIN TB_STUDENT s ON(d.DEPARTMENT_NO = s.DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE td.DEPARTMENT_NAME ='환경조경학과'
GROUP BY d.DEPARTMENT_NAME 
ORDER BY 1;















